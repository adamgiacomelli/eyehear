!function(root){"use strict";function _isFunction(v){return"function"==typeof v}function _result(v){return _isFunction(v)?v():v}function Spectrogram(canvas,options){if(!(this instanceof Spectrogram))return new Spectrogram(canvas,options);var baseCanvasOptions=options.canvas||{};this._audioEnded=null,this._paused=null,this._pausedAt=null,this._startedAt=null,this._sources={audioBufferStream:null,userMediaStream:null},this._baseCanvas=canvas,this._baseCanvasContext=this._baseCanvas.getContext("2d"),this._baseCanvas.width=_result(baseCanvasOptions.width)||this._baseCanvas.width,this._baseCanvas.height=_result(baseCanvasOptions.height)||this._baseCanvas.height,window.onresize=function(){this._baseCanvas.width=_result(baseCanvasOptions.width)||this._baseCanvas.width,this._baseCanvas.height=_result(baseCanvasOptions.height)||this._baseCanvas.height}.bind(this);var audioOptions=options.audio||{};this.audio=audioOptions;var colors=[];colors="function"==typeof options.colors?options.colors(275):this._generateDefaultColors(275),this._colors=colors,this._baseCanvasContext.fillStyle=this._getColor(0),this._baseCanvasContext.fillRect(0,0,this._baseCanvas.width,this._baseCanvas.height)}var toString=Object.prototype.toString;Spectrogram.prototype._init=function(){var source=this._sources.audioBufferStream;source.scriptNode=source.audioContext.createScriptProcessor(2048,1,1),source.scriptNode.connect(source.audioContext.destination),source.scriptNode.onaudioprocess=function(event){var array=new Uint8Array(source.analyser.frequencyBinCount);source.analyser.getByteFrequencyData(array),this._draw(array,source.canvasContext)}.bind(this),source.sourceNode.onended=function(){this.stop()}.bind(this),source.analyser=source.audioContext.createAnalyser(),source.analyser.smoothingTimeConstant=0,source.analyser.fftSize=1024,source.analyser.connect(source.scriptNode),source.sourceNode.connect(source.analyser),this.audio.enable&&source.sourceNode.connect(source.audioContext.destination)},Spectrogram.prototype._draw=function(array,canvasContext){if(this._paused)return!1;var canvas=canvasContext.canvas,width=canvas.width,height=canvas.height,tempCanvasContext=canvasContext._tempContext,tempCanvas=tempCanvasContext.canvas;tempCanvasContext.drawImage(canvas,0,0,width,height);for(var i=0;i<array.length;i++){var value=array[i];canvasContext.fillStyle=this._getColor(value),this._audioEnded&&(canvasContext.fillStyle=this._getColor(0)),canvasContext.fillRect(width-1,height-i,1,1)}canvasContext.translate(-1,0),canvasContext.drawImage(tempCanvas,0,0,width,height,0,0,width,height),canvasContext.drawImage(tempCanvas,0,0,width,height,0,0,width,height),canvasContext.setTransform(1,0,0,1,0,0),this._baseCanvasContext.drawImage(canvas,0,0,width,height)},Spectrogram.prototype._startMediaStreamDraw=function(analyser,canvasContext){window.requestAnimationFrame(this._startMediaStreamDraw.bind(this,analyser,canvasContext));var audioData=new Uint8Array(analyser.frequencyBinCount);analyser.getByteFrequencyData(audioData),this._draw(audioData,canvasContext)},Spectrogram.prototype.connectSource=function(audioBuffer,audioContext){var source=this._sources.audioBufferStream||{};if("[object ScriptProcessorNode]"===toString.call(source.scriptNode)&&(source.scriptNode.onaudioprocess=null),"[object AudioBuffer]"===toString.call(audioBuffer)){audioContext=!audioContext&&source.audioBuffer.context||!audioContext&&source.audioContext||audioContext;var sourceNode=audioContext.createBufferSource();sourceNode.buffer=audioBuffer;var canvasContext=source.canvasContext;if(!source.canvasContext){var canvas=document.createElement("canvas");canvas.width=this._baseCanvas.width,canvas.height=this._baseCanvas.height,canvasContext=canvas.getContext("2d");var tempCanvas=document.createElement("canvas");tempCanvas.width=canvas.width,tempCanvas.height=canvas.height,canvasContext._tempContext=tempCanvas.getContext("2d")}source={audioBuffer:audioBuffer,audioContext:audioContext,sourceNode:sourceNode,analyser:null,scriptNode:null,canvasContext:canvasContext},this._sources.audioBufferStream=source,this._init()}"[object AnalyserNode]"===toString.call(audioBuffer)&&(source=this._sources.userMediaStream||{},source.analyser=audioBuffer,this._sources.userMediaStream=source)},Spectrogram.prototype.start=function(offset){var source=this._sources.audioBufferStream,sourceMedia=this._sources.userMediaStream;if(source&&source.sourceNode&&(source.sourceNode.start(0,offset||0),this._audioEnded=!1,this._paused=!1,this._startedAt=Date.now()),sourceMedia&&sourceMedia.analyser){source=sourceMedia;var canvas=document.createElement("canvas");canvas.width=this._baseCanvas.width,canvas.height=this._baseCanvas.height;var canvasContext=canvas.getContext("2d"),tempCanvas=document.createElement("canvas");tempCanvas.width=canvas.width,tempCanvas.height=canvas.height,canvasContext._tempContext=tempCanvas.getContext("2d"),this._startMediaStreamDraw(source.analyser,canvasContext)}},Spectrogram.prototype.stop=function(){var source=this._sources[0];source&&source.sourceNode&&source.sourceNode.stop(),this._audioEnded=!0},Spectrogram.prototype.pause=function(){this.stop(),this._paused=!0,this._pausedAt=Date.now()-this._startedAt},Spectrogram.prototype.resume=function(offset){var source=this._sources[0];this._paused=!1,this._pausedAt&&(this._startedAt=Date.now()-this._pausedAt,this.connectSource(source.audioBuffer,source.audioContext),this.start(offset||this._pausedAt/1e3))},Spectrogram.prototype.clear=function(canvasContext){var source=this._sources[0];this.stop(),"[object ScriptProcessorNode]"===toString.call(source.scriptNode)&&(source.scriptNode.onaudioprocess=null),canvasContext=canvasContext||source.canvasContext;var canvas=canvasContext.canvas;canvasContext.clearRect(0,0,canvas.width,canvas.height),canvasContext._tempContext.clearRect(0,0,canvas.width,canvas.height),this._baseCanvasContext.clearRect(0,0,canvas.width,canvas.height)},Spectrogram.prototype._generateDefaultColors=function(steps){function toRGBString(v){return"rgba("+[v,v,v,1].toString()+")"}for(var frequency=Math.PI/steps,amplitude=127,center=128,slice=Math.PI/2*3.1,colors=[],i=0;i<steps;i++){var v=Math.sin(frequency*i+slice)*amplitude+center>>0;colors.push(toRGBString(v))}return colors},Spectrogram.prototype._getColor=function(index){var color=this._colors[index>>0];return"undefined"==typeof color&&(color=this._colors[0]),color},"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=Spectrogram),exports.Spectrogram=Spectrogram):"function"==typeof define&&define.amd?define([],function(){return Spectrogram}):root.Spectrogram=Spectrogram}(this);